version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: amarvote_backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${NEON_HOST}:${NEON_PORT}/${NEON_DATABASE}?sslmode=require
      - SPRING_DATASOURCE_USERNAME=${NEON_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${NEON_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - SPRING_DEVTOOLS_LIVERELOAD_ENABLED=true
      - RAG_SERVICE_URL=http://rag-service:5001
    volumes:
      - maven_repo:/root/.m2
    networks:
      election_net:
        ipv4_address: 172.20.0.30

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev # Make sure this matches your filename
    container_name: amarvote_frontend
    ports:
      - "5173:5173" # Only expose Vite port
    networks:
      election_net:
        ipv4_address: 172.20.0.40
    depends_on:
      - backend
    volumes:
      - ./frontend:/app # Mount source code
      - /app/node_modules # Preserve node_modules
      - ./frontend/certs:/app/certs # Mount certificates

  electionguard:
    build: ./Microservice
    container_name: electionguard_service
    ports:
      - "5000:5000"
    networks:
      election_net:
        ipv4_address: 172.20.0.10
    environment:
      - FLASK_DEBUG=0
      - MASTER_KEY_PQ=${MASTER_KEY_PQ}

  rag-service:
    build: ./rag-service
    container_name: rag_service
    ports:
      - "5001:5001"
    networks:
      election_net:
        ipv4_address: 172.20.0.50
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - RAG_SERVICE_PORT=5001
    volumes:
      - ./backend/src/main/resources/pdf:/app/data # Mount PDF directory
      - rag_vectorstore:/app/vectorstore # Persist vector store

  hardhat:
    build:
      context: ./blockchain
      dockerfile: Dockerfile.hardhat
    container_name: hardhat_node
    ports:
      - "8545:8545"
    volumes:
      - hardhat_chaindata:/app/chaindata
    networks:
      election_net:
        ipv4_address: 172.20.0.60
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8545" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  blockchain-microservice:
    build:
      context: ./blockchain-microservice
    container_name: blockchain_microservice
    ports:
      - "5002:5002"
    environment:
      - HARDHAT_URL=http://hardhat:8545
      - DEPLOYER_PRIVATE_KEY=0xac0974bec39a17e36ba4a6b4d238ff944bacb478cbed5efcae784d7bf4f2ff80
      - VOTER1_PRIVATE_KEY=0x59c6995e998f97a5a0044966f0945389dc9e86dae88c7a8412f4603b6b78690d
      - VOTER2_PRIVATE_KEY=0x5de4111afa1a4b94908f83103eb1f1706367c2e68ca870fc3fb9a804cdab365a
      - TEST_ELECTION_ID=test_election_2024
    networks:
      election_net:
        ipv4_address: 172.20.0.70
    depends_on:
      hardhat:
        condition: service_healthy
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5002/health" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  maven_repo:
  rag_vectorstore:
  hardhat_chaindata:


networks:
  election_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
