version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: amarvote_backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${NEON_HOST}:${NEON_PORT}/${NEON_DATABASE}?sslmode=require
      - SPRING_DATASOURCE_USERNAME=${NEON_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${NEON_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - SPRING_DEVTOOLS_LIVERELOAD_ENABLED=true
    volumes:
      - maven_repo:/root/.m2
    networks:
      election_net:
        ipv4_address: 172.20.0.30

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: amarvote_frontend
    ports:
      - "80:80"
      - "443:443"
    networks:
      election_net:
        ipv4_address: 172.20.0.40
    depends_on:
      - backend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro

  electionguard:
    build: ./Microservice
    container_name: electionguard_service
    ports:
      - "5000:5000"
    networks:
      election_net:
        ipv4_address: 172.20.0.10
    environment:
      - FLASK_DEBUG=0
      - MASTER_KEY_PQ=${MASTER_KEY_PQ}

  rag-service:
    build: ./rag-service
    container_name: rag_service
    ports:
      - "5001:5001"
    networks:
      election_net:
        ipv4_address: 172.20.0.50
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - RAG_SERVICE_PORT=5001
    volumes:
      - ./backend/src/main/resources/pdf:/app/data  # Mount PDF directory
      - rag_vectorstore:/app/vectorstore  # Persist vector store

volumes:
  maven_repo:
  rag_vectorstore:

networks:
  election_net:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1