services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: amarvote_backend
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://${NEON_HOST}:${NEON_PORT}/${NEON_DATABASE}?sslmode=require
      - SPRING_DATASOURCE_USERNAME=${NEON_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${NEON_PASSWORD}
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - SPRING_DEVTOOLS_LIVERELOAD_ENABLED=true
      - RAG_SERVICE_URL=http://rag-service:5001
      - BLOCKCHAIN_SERVICE_URL=http://voting-api:5002
      - MASTER_KEY_PQ=${MASTER_KEY_PQ}
    volumes:
      - maven_repo:/root/.m2
    networks:
      - election_net
    depends_on:
      - rag-service
      - voting-api

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: amarvote_frontend
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    networks:
      election_net:
        ipv4_address: 172.20.0.40
    depends_on:
      - backend
    volumes:
      - /etc/letsencrypt:/etc/letsencrypt:ro

  electionguard:
    build: ./Microservice
    container_name: electionguard_service
    restart: unless-stopped
    ports:
      - "5000:5000"
    networks:
      election_net:
        ipv4_address: 172.20.0.10
    environment:
      - FLASK_DEBUG=0
      - MASTER_KEY_PQ=${MASTER_KEY_PQ}

  rag-service:
    build: ./rag-service
    container_name: rag_service
    restart: unless-stopped
    ports:
      - "5001:5001"
    networks:
      election_net:
        ipv4_address: 172.20.0.50
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=False
      - RAG_SERVICE_PORT=5001
    volumes:
      - ./backend/src/main/resources/pdf:/app/data
      - rag_vectorstore:/app/vectorstore

  ganache:
    image: trufflesuite/ganache:latest
    container_name: voting-ganache
    restart: unless-stopped
    ports:
      - "8545:8545"
    environment:
      - GANACHE_ACCOUNTS=10
      - GANACHE_DETERMINISTIC=true
      - GANACHE_MNEMONIC=abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about
      - GANACHE_NETWORK_ID=1337
      - GANACHE_GAS_LIMIT=6721975
      - GANACHE_GAS_PRICE=20000000000
    command: >
      --host 0.0.0.0
      --port 8545
      --accounts 10
      --mnemonic "abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon abandon about"
      --networkId 1337
      --gasLimit 6721975
      --gasPrice 20000000000
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8545 || exit 1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 30s
    networks:
      - voting-network
      - election_net

  blockchain-deployer:
    build:
      context: ./blockchain
      dockerfile: Dockerfile
    container_name: voting-blockchain-deployer
    restart: on-failure
    environment:
      - GANACHE_URL=http://ganache:8545
      - NETWORK_ID=1337
    volumes:
      - contract_artifacts:/app/build
    networks:
      - election_net
    depends_on:
      ganache:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/build/VotingContract.json || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 10

  voting-api:
    build:
      context: ./blockchain-microservice
      dockerfile: Dockerfile
    container_name: voting-api
    restart: unless-stopped
    ports:
      - "5002:5002"
    environment:
      - FLASK_ENV=production
      - GANACHE_URL=http://ganache:8545
      - NETWORK_ID=1337
      - CONTRACT_ARTIFACTS_PATH=/app/contracts
    volumes:
      - contract_artifacts:/app/contracts:ro
      - voting_data:/app/data
    depends_on:
      blockchain-deployer:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5002/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - voting-network
      - election_net

volumes:
  maven_repo:
  rag_vectorstore:
  contract_artifacts:
  voting_data:

networks:
  election_net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1
  voting-network:
    driver: bridge