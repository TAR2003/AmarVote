name: Deploy to Azure VM

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest
    timeout-minutes: 30  # Increased timeout

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: src
      
      - name: Validate environment
        run: |
          cd src
          [ ! -f "frontend/package.json" ] && echo "::error::Missing frontend/package.json" && exit 1
          [ ! -f "backend/pom.xml" ] && echo "::error::Missing backend/pom.xml" && exit 1
          echo "All required files present"

      - name: Set up Docker tools
        uses: docker/setup-buildx-action@v3
      
      - name: Configure SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.AZURE_VM_SECRET }}

      - name: Prepare VM environment
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          ssh-keyscan -H ${{ secrets.AZURE_VM_HOST }} >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          
          ssh ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }} <<EOF
          sudo apt-get update
          sudo apt-get install -y docker.io docker-compose
          sudo usermod -aG docker \$USER
          mkdir -p /home/\$USER/app
          chmod -R 755 /home/\$USER/app
          EOF

      - name: Transfer files
        run: |
          cd src
          rsync -avz --delete \
            --exclude='.git' \
            --exclude='node_modules' \
            ./ ${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}:/home/${{ secrets.AZURE_VM_USERNAME }}/app/

      - name: Deploy application
        run: |
          docker context create azure-vm --docker "host=ssh://${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}"
          docker context use azure-vm
          
          docker compose -f docker-compose.yml down --remove-orphans || true
          docker compose -f docker-compose.yml build --no-cache
          docker compose -f docker-compose.yml up -d --force-recreate
          
          # Extended health checks
          for i in {1..10}; do
            if docker compose -f docker-compose.yml ps | grep -q "running"; then
              break
            fi
            sleep 10
          done
          
          docker compose -f docker-compose.yml logs --tail=50

      - name: Verify services
        run: |
          # Wait for services to initialize
          sleep 30
          
          # Check backend first
          if ! curl -v --retry 5 --retry-delay 10 --max-time 30 \
            http://${{ secrets.AZURE_VM_HOST }}:8080/actuator/health; then
            echo "::error::Backend service failed"
            docker compose -f docker-compose.yml logs backend
            exit 1
          fi
          
          # Then check frontend
          if ! curl -v --retry 5 --retry-delay 10 --max-time 30 \
            http://${{ secrets.AZURE_VM_HOST }}; then
            echo "::error::Frontend service failed"
            docker compose -f docker-compose.yml logs frontend
            exit 1
          fi

      - name: Clean up
        if: always()
        run: |
          docker context use default
          docker context rm azure-vm || true