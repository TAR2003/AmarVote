name: Deploy to Azure VM

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Docker tools
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        uses: docker/setup-compose-action@v1

      - name: Configure SSH access
        run: |
          SSH_DIR="$HOME/.ssh"
          mkdir -p "$SSH_DIR"
          chmod 700 "$SSH_DIR"
          echo "${{ secrets.AZURE_VM_SSH_KEY }}" > "$SSH_DIR/id_rsa"
          chmod 600 "$SSH_DIR/id_rsa"
          ssh-keyscan -H "${{ secrets.AZURE_VM_HOST }}" >> "$SSH_DIR/known_hosts"
          echo "SSH configured"

      - name: Verify VM connectivity
        run: |
          ssh -i "$HOME/.ssh/id_rsa" \
            -o StrictHostKeyChecking=no \
            "${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}" \
            "echo 'Connection successful' && \
             sudo ufw allow 22/tcp && \
             sudo ufw allow 80/tcp && \
             sudo ufw allow 8080/tcp && \
             sudo ufw allow 5000/tcp || true"

      - name: Prepare VM environment
        run: |
          ssh -i "$HOME/.ssh/id_rsa" \
            "${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}" \
            "rm -rf ~/app && mkdir -p ~/app && chmod 755 ~/app"

      - name: Transfer application files
        run: |
          rsync -avz --progress --delete \
            -e "ssh -i $HOME/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            --exclude='.git' \
            --exclude='node_modules' \
            --exclude='.github' \
            ./ "${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}:~/app/"

      - name: Ensure Docker tools are available
        run: |
          ssh -i "$HOME/.ssh/id_rsa" \
            "${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}" \
            "command -v docker-compose &>/dev/null || \
             sudo curl -L \"https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)\" \
             -o /usr/local/bin/docker-compose && \
             sudo chmod +x /usr/local/bin/docker-compose"

      - name: Deploy application stack
        run: |
          ssh -i "$HOME/.ssh/id_rsa" \
            "${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}" \
            "cd ~/app && \
             docker-compose down --remove-orphans || true && \
             docker-compose build --no-cache && \
             docker-compose up -d --force-recreate && \
             sleep 10"

      - name: Validate deployment
        run: |
          echo "Checking containers..."
          ssh -i "$HOME/.ssh/id_rsa" \
            "${{ secrets.AZURE_VM_USERNAME }}@${{ secrets.AZURE_VM_HOST }}" \
            "docker ps -a && docker-compose logs --tail=50"
          
          echo "Testing endpoints..."
          curl --retry 3 --retry-delay 5 -v "http://${{ secrets.AZURE_VM_HOST }}" || true
          curl --retry 3 --retry-delay 5 -v "http://${{ secrets.AZURE_VM_HOST }}:8080/actuator/health" || true
          curl --retry 3 --retry-delay 5 -v "http://${{ secrets.AZURE_VM_HOST }}:5000/health" || true